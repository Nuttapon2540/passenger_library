<h1>Log file</h1>
<%= render_partial('/shared/current_selection', locals: { disabled_selections: [:lang] }) %>

Passenger logs all its messages to a _log file_. Inside this log file you will find informational messages, errors, warnings and debugging messages generated by Passenger, as well as application output. Whenever Passenger wants to tell you something, it is done through this log file, so you should check this file whenever you suspect that something is wrong.

This guide teaches you where to find the log file, how to customize its location and verbosity, and teaches you other miscellaneous things that you should know.

**Table of contents**

<ol class="toc-container"><li>Loading...</li></ol>

## Location of the log file

<% if integration_mode_type == :nginx %>
  <p>
    By default, the Passenger log file is the <strong>global</strong> Nginx error log file. This is one specified by the <code>error_log</code> directive in the main context (that is, <strong>not</strong> the one inside the <code>http</code> context). The file is typically located in <code>/var/log/nginx/error.log</code>.
  </p>
  <p>
    Or, if you configured the <a href="<%= url_for "/references/config_reference/nginx/index.html" %>#passenger_log_file">passenger_log_file</a> directive, then the log file is in the referenced file.
  </p>
<% elsif integration_mode_type == :apache %>
  <p>
    By default, the Passenger log file is the <strong>global</strong> (not the per-vhost) Apache error log file. This is typically located in <code>/var/log/apache2/error_log</code>.
  </p>
  <p>
    You can find out the exact location of the error log by running <code>passenger-config --detect-apache2</code>.
  </p>
  <p>
    Or, if you configured the <a href="<%= url_for "/references/config_reference/apache/index.html" %>#passengerlogfile">PassengerLogFile</a> directive, then the log file is in the referenced file.
  </p>
<% elsif integration_mode_type == :standalone %>
  <p>
    The default log file is located in <code>log/passenger.XXX.log</code>, where <code>XXX</code> is the port number that Passenger listens on.
  </p>
  <p>
    Or, if you passed the <a href="<%= url_for "/references/config_reference/standalone/index.html" %>#--log-file-log_file"><code>--log-file</code> / "log_file"</a> configuration, then the log file is in the referenced file.
  </p>
<% else %>
  <% raise "TODO" %>
<% end %>

<div class="info">
  Make sure you select the right integration in the config reference article mentioned above.
</div>

## Application output logging

### Stdout and stderr

Everything that the application writes to [the stdout and stderr channels](<%= url_for "/advanced_guides/in_depth/ruby/std_channels.html" %>) is logged to the log file at log level 3 (the default log level for Passenger).

### Application log

The application or web framework may have its own log file that is independent from the Passenger log file. You should also check that file to see whether your application or web framework has logged any important messages.

For example, Ruby on Rails logs to `log/development.log` and `log/production.log`. When an error occurs during request handling, it is typically logged here. Note that this file does **not** contain errors that Rails encounters during startup -- those kinds of errors are typically written to stderr, which means they end up in the Passenger log instead.

Note that Passenger runs applications in the "production" environment by default (that is, Passenger sets `RAILS_ENV`, `RACK_ENV`, `NODE_ENV` and related environment variables "production"). So if you're using Rails, please be sure to check `production.log` instead of `development.log`.

## Customizing the log file

<% if integration_mode_type == :nginx %>
  You can instruct Passenger to log to a specific log using the [passenger_log_file](<%= url_for "/references/config_reference/nginx/index.html" %>#passenger_log_file) option.

  By default, Passenger only prints important informational messages, warnings and errors. You can configure Passenger to log less important messages too, such as debugging messages, through [passenger_log_level](<%= url_for "/references/config_reference/nginx/index.html" %>#passenger_log_level).
<% elsif integration_mode_type == :apache %>
  You can instruct Passenger to log to a specific log using the [PassengerLogFile](<%= url_for "/references/config_reference/nginx/index.html" %>#passengerlogfile) option.

  By default, Passenger only prints important informational messages, warnings and errors. You can configure Passenger to log less important messages too, such as debugging messages, through [PassengerLogLevel](<%= url_for "/references/config_reference/apache/index.html" %>#passengerloglevel).
<% elsif integration_mode_type == :standalone %>
  You can instruct Passenger to log to a specific log using the [passenger_log_file](<%= url_for "/references/config_reference/standalone/index.html" %>#--log-file-log_file) option.

  By default, Passenger only prints important informational messages, warnings and errors. You can configure Passenger to log less important messages too, such as debugging messages, through [`--log-level` / "log_level"](<%= url_for "/references/config_reference/standalone/index.html" %>#--log-level-log_level).
<% else %>
  <% raise "TODO" %>
<% end %>

<div class="info">
  Make sure you select the right integration in the config reference article mentioned above.
</div>

## Troubleshooting logging problems

<% if integration_mode_type == :nginx || integration_mode_type == :apache %>
  <h3>Messages may get lost by log rotation problems</h3>

  Is your Passenger log file the <%= integration_mode_name %> error log? And do you not find anything useful inside it, while at the same time it looks like Passenger stopped logging to the file quite some time ago? Then you probably have a log rotation problem, causing logs to get lost. Please [configure Passenger log rotation.](<%= url_for "/advanced_guides/troubleshooting/nginx/log_rotation.html" %>)
<% end %>

<% if integration_mode_type == :standalone %>
### Specifying /dev/stdout or /dev/stderr instead of a file doesn't work

Passenger Standalone supports using /dev/stdout and /dev/stderr since version 5.0.29, using the [regular standalone options](<%= url_for "/references/config_reference/standalone/index.html" %>#--log-file-log_file). Using other ways to configure these paths, for example via the [Nginx configuration template](<%= url_for "/advanced_guides/config_and_optimization/standalone/intro.html" %>#nginx-configuration-template), are not supported at this time.
<% end %>

### Application stdout/stderr problems

Are you expecting to find application output in the log file, but don't actually see it? Then the cause may be that the application has modified stdout and stderr. [Learn more about this.](<%= url_for "/advanced_guides/in_depth/ruby/std_channels.html" %>)

### Try raising the log level

Sometimes there's actually nothing wrong with the log file. Try raising the log level so that you see more messages.

<div class="back-button">
  <a class="dark-button" href="<%= url_for "/advanced_guides/troubleshooting/index.html" %>">Back</a>
</div>
